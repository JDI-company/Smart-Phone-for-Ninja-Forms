/*! For license information please see main.min.js.LICENSE.txt */
(()=>{"use strict";var __webpack_modules__={"./admin/js/modules/Abstract/AdminField.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "AdminField": () => (/* binding */ AdminField)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils */ "./admin/js/utils.js");\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n/**\n * Abstract Class\n *\n * @class AdminField\n */\n\n\nvar $ = jQuery;\nvar AdminField = /*#__PURE__*/function () {\n  /**\n   * Abstract Fields\n   *\n   * @param {Node} $field\n   * @param {string} fieldSelector\n   */\n\n  /**\n   * Constructor\n   *\n   * @param {string} fieldSelector\n   */\n  function AdminField(fieldSelector) {\n    _classCallCheck(this, AdminField);\n    _defineProperty(this, "$field", void 0);\n    _defineProperty(this, "fieldSelector", void 0);\n    if (this.constructor === AdminField) {\n      throw new Error(\'Object of Abstract Class cannot be created\');\n    }\n  }\n\n  /**\n   * Get Admin Field as Node by checking body updates\n   *\n   * @return {Node}\n   */\n  _createClass(AdminField, [{\n    key: "findField",\n    value: function findField() {\n      var _this = this;\n      if (!$(this.fieldSelector).length) {\n        var target = document.body;\n        var config = {\n          childList: true\n        };\n\n        // Create an observer instance.\n        var observer = new MutationObserver(function (mutationList, _observer) {\n          if ($(_this.fieldSelector).length) {\n            _this.$field = $(_this.fieldSelector);\n            _observer.disconnect();\n          }\n        });\n\n        // Pass in the target node, as well as the observer config.\n        observer.observe(target, config);\n      }\n      return $(this.fieldSelector);\n    }\n\n    /**\n     * Handle Field On Change\n     *\n     * @param {Function} callback\n     */\n  }, {\n    key: "handleOnChange",\n    value: function handleOnChange(callback) {\n      $(document).on(\'change\', this.fieldSelector, function () {\n        var currentValue = $(this).val();\n        callback(currentValue);\n      });\n    }\n\n    /**\n     * Set Field Value\n     *\n     * @param {array} optionValueSelector - Array of values \'All\', \'European\', \'dz\' (ISO 2 Code)\n     * @param {Boolean} value - True or False\n     */\n  }, {\n    key: "setFieldValue",\n    value: function setFieldValue(optionValueSelector, value) {\n      var _this2 = this;\n      if (!Array.isArray(optionValueSelector)) {\n        optionValueSelector = [optionValueSelector];\n      }\n      if (value !== true || value !== false) {\n        throw new Error(\'setFieldValue: wrong value, should be boolean\');\n      }\n      optionValueSelector.forEach(function (_optionValueSelector) {\n        // Handle data\n        _optionValueSelector = _optionValueSelector.toLowerCase();\n        var optionSelector = "".concat(_this2.fieldSelector, " option[value=\\"").concat(_optionValueSelector, "\\"]");\n        if ($(optionSelector).length) {\n          (0,_utils__WEBPACK_IMPORTED_MODULE_0__.propSelected)(optionSelector, value);\n        } else {\n          throw new Error(_this2.getErrorOptionNotFound());\n        }\n      });\n    }\n\n    /**\n     * Get <option> tags from field by status\n     * You can choose return type\n     *\n     * @param {Enum} type - \'all\', \'active\', \'unactive\', \'selected\', \'unselected\'\n     * @param {Enum} returnType - \'node\' (HTML Elements), \'value\'\n     * @return {Array<Nodes>} - HTML Nodes inside field\n     */\n  }, {\n    key: "getOptions",\n    value: function getOptions() {\n      var _this$$field, _this$$field2, _this$$field3, _this$$field4, _this$$field5;\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \'all\';\n      var returnType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'node\';\n      switch (type) {\n        case \'all\':\n          return _toConsumableArray((_this$$field = this.$field) === null || _this$$field === void 0 ? void 0 : _this$$field.find(\'option\')).map(function ($option) {\n            return getValueByType($option);\n          });\n        case \'active\':\n          return _toConsumableArray((_this$$field2 = this.$field) === null || _this$$field2 === void 0 ? void 0 : _this$$field2.find(\'option:not([disabled="disabled"])\')).map(function ($option) {\n            return getValueByType($option);\n          });\n        case \'unactive\':\n          return _toConsumableArray((_this$$field3 = this.$field) === null || _this$$field3 === void 0 ? void 0 : _this$$field3.find(\'option[disabled="disabled"]\')).map(function ($option) {\n            return getValueByType($option);\n          });\n        case \'selected\':\n          return _toConsumableArray((_this$$field4 = this.$field) === null || _this$$field4 === void 0 ? void 0 : _this$$field4.find(\'option:checked\')).map(function ($option) {\n            return getValueByType($option);\n          });\n        case \'unselected\':\n          return _toConsumableArray((_this$$field5 = this.$field) === null || _this$$field5 === void 0 ? void 0 : _this$$field5.find(\'option:not(:checked)\')).map(function ($option) {\n            return getValueByType($option);\n          });\n        default:\n          throw new Error(\'getOptions: type is wrong!\');\n      }\n\n      /**\n       * Get Option Value By Return Type argument\n       *\n       * @param {Node} $option\n       * @return {Node|string}\n       */\n      function getValueByType($option) {\n        switch (returnType) {\n          case \'node\':\n            return $($option);\n          case \'value\':\n            return $($option).val();\n          default:\n            throw new Error(\'getOptions: returnType is wrong!\');\n        }\n      }\n    }\n\n    /**\n     * Disable options inside field by selector\n     * It sets attribute \'disabled="disabled"\' or removes it\n     *\n     * @param {Array<String>|string} optionValueSelector\n     * @param {Boolean} value\n     */\n  }, {\n    key: "disableOptions",\n    value: function disableOptions(optionValueSelector, value) {\n      var _this3 = this;\n      if (!Array.isArray(optionValueSelector)) {\n        optionValueSelector = [optionValueSelector];\n      }\n      if (value !== true || value !== false) {\n        throw new Error(\'disableOptions: wrong value, should be boolean\');\n      }\n      optionValueSelector.forEach(function (_optionValueSelector) {\n        // Handle data\n        _optionValueSelector = _optionValueSelector.toLowerCase();\n        var optionSelector = "".concat(_this3.fieldSelector, " option[value=\\"").concat(_optionValueSelector, "\\"]");\n        if ($(optionSelector).length) {\n          (0,_utils__WEBPACK_IMPORTED_MODULE_0__.propDisabled)(optionSelector, value);\n        } else {\n          throw new Error(_this3.getErrorOptionNotFound());\n        }\n      });\n    }\n\n    /**\n     * Error Message if option inside field was not found\n     */\n  }, {\n    key: "getErrorOptionNotFound",\n    value: function getErrorOptionNotFound() {\n      throw new Error(\'getErrorOptionNotFound should be implemented!\');\n    }\n  }]);\n  return AdminField;\n}();\n\n//# sourceURL=webpack://nf-spn-addon/./admin/js/modules/Abstract/AdminField.js?')},"./admin/js/modules/Fields/FieldExcludeCountries.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "FieldExcludeCountries": () => (/* binding */ FieldExcludeCountries)\n/* harmony export */ });\n/* harmony import */ var _Abstract_AdminField__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstract/AdminField */ "./admin/js/modules/Abstract/AdminField.js");\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n/**\n * Field Exclude Countries Class\n *\n * @class FieldExcludeCountries\n * @extends AdminField\n */\n\n\nvar FieldExcludeCountries = /*#__PURE__*/function (_AdminField) {\n  _inherits(FieldExcludeCountries, _AdminField);\n  var _super = _createSuper(FieldExcludeCountries);\n  /**\n   * Constructor\n   *\n   * @param {string} fieldSelector\n   */\n  function FieldExcludeCountries(fieldSelector) {\n    var _this;\n    _classCallCheck(this, FieldExcludeCountries);\n    _this = _super.call(this, fieldSelector);\n    _this.fieldSelector = fieldSelector;\n    _this.$field = _this.findField();\n    return _this;\n  }\n\n  /**\n   * Init getter without setter to\n   * avoid changing field selector\n   */\n  _createClass(FieldExcludeCountries, [{\n    key: "fieldSelector",\n    get: function get() {\n      return this.fieldSelector;\n    }\n\n    /**\n     * Error Message if option inside field was not found\n     *\n     * @return {string}\n     */\n  }, {\n    key: "getErrorOptionNotFound",\n    value: function getErrorOptionNotFound() {\n      return \'FieldExcludeCountries: option value is not found.\';\n    }\n  }]);\n  return FieldExcludeCountries;\n}(_Abstract_AdminField__WEBPACK_IMPORTED_MODULE_0__.AdminField);\n\n//# sourceURL=webpack://nf-spn-addon/./admin/js/modules/Fields/FieldExcludeCountries.js?')},"./admin/js/modules/Fields/FieldOnlyCountries.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "FieldOnlyCountries": () => (/* binding */ FieldOnlyCountries)\n/* harmony export */ });\n/* harmony import */ var _Abstract_AdminField__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstract/AdminField */ "./admin/js/modules/Abstract/AdminField.js");\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n/**\n * Field Only Countries Class\n *\n * @class FieldOnlyCountries\n * @extends AdminField\n */\n\n\nvar FieldOnlyCountries = /*#__PURE__*/function (_AdminField) {\n  _inherits(FieldOnlyCountries, _AdminField);\n  var _super = _createSuper(FieldOnlyCountries);\n  /**\n   * Constructor\n   *\n   * @param {string} fieldSelector\n   */\n  function FieldOnlyCountries(fieldSelector) {\n    var _this;\n    _classCallCheck(this, FieldOnlyCountries);\n    _this = _super.call(this, fieldSelector);\n    _this.fieldSelector = fieldSelector;\n    _this.$field = _this.findField();\n    return _this;\n  }\n\n  /**\n   * Init getter without setter to\n   * avoid changing field selector\n   */\n  _createClass(FieldOnlyCountries, [{\n    key: "fieldSelector",\n    get: function get() {\n      return this.fieldSelector;\n    }\n\n    /**\n     * Error Message if option inside field was not found\n     *\n     * @return {string}\n     */\n  }, {\n    key: "getErrorOptionNotFound",\n    value: function getErrorOptionNotFound() {\n      return \'FieldOnlyCountries: option value is not found.\';\n    }\n  }]);\n  return FieldOnlyCountries;\n}(_Abstract_AdminField__WEBPACK_IMPORTED_MODULE_0__.AdminField);\n\n//# sourceURL=webpack://nf-spn-addon/./admin/js/modules/Fields/FieldOnlyCountries.js?')},"./admin/js/modules/Fields/FieldPrefferedCountries.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "FieldPrefferedCountries": () => (/* binding */ FieldPrefferedCountries)\n/* harmony export */ });\n/* harmony import */ var _Abstract_AdminField__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Abstract/AdminField */ "./admin/js/modules/Abstract/AdminField.js");\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n/**\n * Field Preffered Countries Class\n *\n * @class FieldPrefferedCountries\n * @extends AdminField\n */\n\n\nvar $ = jQuery;\nvar FieldPrefferedCountries = /*#__PURE__*/function (_AdminField) {\n  _inherits(FieldPrefferedCountries, _AdminField);\n  var _super = _createSuper(FieldPrefferedCountries);\n  /**\n   * Constructor\n   *\n   * @param {string} fieldSelector\n   */\n  function FieldPrefferedCountries(fieldSelector) {\n    var _this;\n    _classCallCheck(this, FieldPrefferedCountries);\n    _this = _super.call(this, fieldSelector);\n    _this.fieldSelector = fieldSelector;\n    _this.$field = _this.findField();\n    return _this;\n  }\n\n  /**\n   * Init getter without setter to\n   * avoid changing field selector\n   */\n  _createClass(FieldPrefferedCountries, [{\n    key: "fieldSelector",\n    get: function get() {\n      return this.fieldSelector;\n    }\n\n    /**\n     * Error Message if option inside field was not found\n     *\n     * @return {string}\n     */\n  }, {\n    key: "getErrorOptionNotFound",\n    value: function getErrorOptionNotFound() {\n      return \'FieldPrefferedCountries: option value is not found.\';\n    }\n  }]);\n  return FieldPrefferedCountries;\n}(_Abstract_AdminField__WEBPACK_IMPORTED_MODULE_0__.AdminField);\n\n//# sourceURL=webpack://nf-spn-addon/./admin/js/modules/Fields/FieldPrefferedCountries.js?')},"./admin/js/modules/SyncCountriesChoice.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "SyncCountriesChoice": () => (/* binding */ SyncCountriesChoice)\n/* harmony export */ });\n/* harmony import */ var _Fields_FieldOnlyCountries__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Fields/FieldOnlyCountries */ "./admin/js/modules/Fields/FieldOnlyCountries.js");\n/* harmony import */ var _Fields_FieldPrefferedCountries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Fields/FieldPrefferedCountries */ "./admin/js/modules/Fields/FieldPrefferedCountries.js");\n/* harmony import */ var _Fields_FieldExcludeCountries__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Fields/FieldExcludeCountries */ "./admin/js/modules/Fields/FieldExcludeCountries.js");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils */ "./admin/js/utils.js");\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError("attempted to get private field on non-instance"); } return fn; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }\n/**\n * Sync Countries Choice\n *\n * @class SyncCountriesChoice\n */\n\n\n\n\n\nvar $ = jQuery;\nvar _observer = /*#__PURE__*/new WeakMap();\nvar _handleAppLoaded = /*#__PURE__*/new WeakSet();\nvar _handleSPNFields = /*#__PURE__*/new WeakSet();\nvar SyncCountriesChoice = /*#__PURE__*/_createClass(\n/**\n * Fields\n *\n * @param {MutationObserver} #observer\n */\n\n/**\n * Constructor\n *\n * @param {MutationObserver} observer\n */\nfunction SyncCountriesChoice(observer) {\n  _classCallCheck(this, SyncCountriesChoice);\n  _classPrivateMethodInitSpec(this, _handleSPNFields);\n  _classPrivateMethodInitSpec(this, _handleAppLoaded);\n  _classPrivateFieldInitSpec(this, _observer, {\n    writable: true,\n    value: void 0\n  });\n  _classPrivateFieldSet(this, _observer, observer);\n  _classPrivateMethodGet(this, _handleAppLoaded, _handleAppLoaded2).call(this);\n  _classPrivateMethodGet(this, _handleSPNFields, _handleSPNFields2).call(this);\n}\n\n/**\n * Disconnect observer if ninja forms app was loaded\n */);\nfunction _handleAppLoaded2() {\n  if ($(\'.nf-field-wrap.spn\').length) {\n    _classPrivateFieldGet(this, _observer).disconnect();\n  }\n}\nfunction _handleSPNFields2() {\n  $(\'.nf-field-wrap.spn\').each(function () {\n    var $field = $(this);\n    $(document).one(\'click\', $field.find(\'> div:first-of-type\'), handleSPNFieldClick);\n  });\n\n  /**\n   * Handle SPN Field By Click\n   */\n  function handleSPNFieldClick(event) {\n    var FieldOnly = new _Fields_FieldOnlyCountries__WEBPACK_IMPORTED_MODULE_0__.FieldOnlyCountries(\'#only_countries\');\n    var FieldPreffered = new _Fields_FieldPrefferedCountries__WEBPACK_IMPORTED_MODULE_1__.FieldPrefferedCountries(\'#preffered_countries\');\n    var FieldExclude = new _Fields_FieldExcludeCountries__WEBPACK_IMPORTED_MODULE_2__.FieldExcludeCountries(\'#exclude_countries\');\n    FieldOnly.handleOnChange(function (currentValue) {\n      // If no one value selected use all field\n      if (!currentValue.length || currentValue.includes(\'all\')) {\n        // Handle Field Exclude\n        FieldExclude.setFieldValue(_utils__WEBPACK_IMPORTED_MODULE_3__.codesISO2, false);\n        FieldExclude.disableOptions(_utils__WEBPACK_IMPORTED_MODULE_3__.codesISO2, false);\n\n        // Handle Field Preffered\n        FieldPreffered.setFieldValue(_utils__WEBPACK_IMPORTED_MODULE_3__.codesISO2, false);\n        FieldPreffered.disableOptions(_utils__WEBPACK_IMPORTED_MODULE_3__.codesISO2, false);\n\n        // Handle Field Only\n        var fieldOnlyOptions = _toConsumableArray(_utils__WEBPACK_IMPORTED_MODULE_3__.codesISO2); // clone array\n        fieldOnlyOptions.push(\'european\');\n        FieldOnly.setFieldValue(fieldOnlyOptions, false);\n        FieldOnly.disableOptions(fieldOnlyOptions, false);\n        FieldOnly.setFieldValue(\'all\', true);\n      } else if (currentValue.includes(\'european\')) {\n        var onlyCountries = _toConsumableArray(_utils__WEBPACK_IMPORTED_MODULE_3__.codesISO2European);\n        onlyCountries = onlyCountries.concat(FieldOnly.getOptions(\'selected\', \'value\').remove(\'european\'));\n\n        // Handle Field Only\n        FieldOnly.disableOptions(_utils__WEBPACK_IMPORTED_MODULE_3__.codesISO2European, true);\n\n        // Handle Field Exclude\n        FieldExclude.setFieldValue(_utils__WEBPACK_IMPORTED_MODULE_3__.codesISO2, false);\n        FieldExclude.disableOptions(_utils__WEBPACK_IMPORTED_MODULE_3__.codesISO2, true);\n        FieldExclude.disableOptions(onlyCountries, false);\n\n        // Handle Field Preffered\n        FieldPreffered.setFieldValue(_utils__WEBPACK_IMPORTED_MODULE_3__.codesISO2, false);\n        FieldPreffered.disableOptions(_utils__WEBPACK_IMPORTED_MODULE_3__.codesISO2, true);\n        FieldPreffered.disableOptions(onlyCountries, false);\n      } else {\n        // Handle Field Exclude\n        FieldExclude.setFieldValue(_utils__WEBPACK_IMPORTED_MODULE_3__.codesISO2, false);\n        FieldExclude.disableOptions(_utils__WEBPACK_IMPORTED_MODULE_3__.codesISO2, true);\n        FieldExclude.disableOptions(currentValue, false);\n\n        // Handle Field Preffered\n        FieldPreffered.setFieldValue(_utils__WEBPACK_IMPORTED_MODULE_3__.codesISO2, false);\n        FieldPreffered.disableOptions(_utils__WEBPACK_IMPORTED_MODULE_3__.codesISO2, true);\n        FieldPreffered.disableOptions(currentValue, false);\n      }\n    });\n    FieldExclude.handleOnChange(function (currentValue) {\n      // Concat disabled options\n      var excludedOptions = FieldExclude.getOptions(\'unactive\', \'value\');\n      currentValue = currentValue.concat(excludedOptions);\n\n      // Handle Field Preffered\n      FieldPreffered.setFieldValue(currentValue, false);\n      FieldPreffered.disableOptions(_utils__WEBPACK_IMPORTED_MODULE_3__.codesISO2, false);\n      FieldPreffered.disableOptions(currentValue, true);\n    });\n  }\n}\n\n//# sourceURL=webpack://nf-spn-addon/./admin/js/modules/SyncCountriesChoice.js?')},"./admin/js/ninja-forms-spn-addon-admin.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_SyncCountriesChoice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/SyncCountriesChoice */ "./admin/js/modules/SyncCountriesChoice.js");\n/**\n * Ninja Forms SPN Addon Admin JavaScript Code (Back-end)\n *\n * @since 1.0.0\n */\n\n\n\n/* eslint no-extend-native: ["error", { "exceptions": ["Array"] }] */\nArray.prototype.remove = function (value) {\n  return this.filter(function (element) {\n    return element !== value;\n  });\n};\n\n/**\n * SyncCountriesChoice\n */\n(function ($) {\n  $(document).ready(function () {\n    var target = document.body;\n    var config = {\n      childList: true\n    };\n\n    // Create an observer instance.\n    var observer = new MutationObserver(function (mutationList, observer) {\n      return new _modules_SyncCountriesChoice__WEBPACK_IMPORTED_MODULE_0__.SyncCountriesChoice(observer);\n    });\n\n    // Pass in the target node, as well as the observer config.\n    observer.observe(target, config);\n  });\n})(jQuery);\n\n//# sourceURL=webpack://nf-spn-addon/./admin/js/ninja-forms-spn-addon-admin.js?')},"./admin/js/utils.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"codesISO2\": () => (/* binding */ codesISO2),\n/* harmony export */   \"codesISO2European\": () => (/* binding */ codesISO2European),\n/* harmony export */   \"propDisabled\": () => (/* binding */ propDisabled),\n/* harmony export */   \"propSelected\": () => (/* binding */ propSelected)\n/* harmony export */ });\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n/**\n * Admin JavaScript Utils\n *\n * @since 1.0.0\n */\n\nvar $ = jQuery;\n\n// Get All Countries Codes from intTelInput\nvar allCountries = _toConsumableArray(window.intlTelInputGlobals.getCountryData());\n\n// Set All ISO2 codes\nvar codesISO2 = allCountries.map(function (country) {\n  return country.iso2;\n});\n\n// Set European ISO2 codes\nvar codesISO2European = ['al', 'ad', 'at', 'by', 'be', 'ba', 'bg', 'hr', 'cz', 'dk', 'ee', 'fo', 'fi', 'fr', 'de', 'gi', 'gr', 'va', 'hu', 'is', 'ie', 'it', 'lv', 'li', 'lt', 'lu', 'mk', 'mt', 'md', 'mc', 'me', 'nl', 'no', 'pl', 'pt', 'ro', 'ru', 'sm', 'rs', 'sk', 'si', 'es', 'se', 'ch', 'ua', 'gb'];\n\n/**\n * @param {selector} $selector - Selector (\".nf-field-wrap\" - example)\n * @param {Boolean} $value - True or False\n */\nfunction propDisabled($selector, value) {\n  if (value === true) {\n    $($selector).attr('disabled', 'disabled');\n  } else if (value === false) {\n    $($selector).removeAttr('disabled');\n  } else {\n    throw new Error('PropDisabled: Wrong value');\n  }\n}\n\n/**\n * @param {selector} $selector - Selector (\".nf-field-wrap\" - example)\n * @param {Boolean} $value - True or False\n */\nfunction propSelected($selector, value) {\n  if (value === true) {\n    $($selector).attr('selected', 'selected');\n  } else if (value === false) {\n    $($selector).removeAttr('selected');\n  } else {\n    throw new Error('propSelected: Wrong value');\n  }\n}\n\n\n//# sourceURL=webpack://nf-spn-addon/./admin/js/utils.js?")}},__webpack_module_cache__={};function __webpack_require__(e){var r=__webpack_module_cache__[e];if(void 0!==r)return r.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}__webpack_require__.d=(e,r)=>{for(var t in r)__webpack_require__.o(r,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},__webpack_require__.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./admin/js/ninja-forms-spn-addon-admin.js")})();